
using System;

class GFG
{
	
	static int binarySearch(int[] arr, int l, int r, int x)
	{
		if (r >= l)
		{
			int mid = l + (r - l) / 2;

		
			if (arr[mid] == x)
				return mid;

			if (arr[mid] > x)
				return binarySearch(arr, l, mid - 1, x);

			
			return binarySearch(arr, mid + 1, r, x);
		}

		
		return -1;
	}
	static void bubbleSort(int[] arr)
	{
		int n = arr.Length;
		for (int i = 0; i < n - 1; i++)
			for (int j = 0; j < n - i - 1; j++)
				if (arr[j] > arr[j + 1])
				{

					int temp = arr[j];
					arr[j] = arr[j + 1];
					arr[j + 1] = temp;
				}
	}

	public static void Main()
	{

		int n;
		Console.WriteLine("Enter length of the array");
		String a = Console.ReadLine();
		n = int.Parse(a);
		int[] a1 = new int[n];
		Console.WriteLine("Enter " + n + " elements");
		for (int i = 0; i < n; i++)
		{
			String v = Console.ReadLine();
			int v1 = int.Parse(v);
			a1[i] = v1;
		}
		int len = a1.Length;
		int x;
		int min = 0;
		int max = len - 1;
		bubbleSort(a1);
		Console.WriteLine("Enter the element to be searched");
		String ele = Console.ReadLine();
		x = int.Parse(ele);
		int result = binarySearch(a1, min, max, x);

		if (result == -1)
			Console.WriteLine("Element not present");
		else
			Console.WriteLine("Element found at index "+ result);
	}
}
